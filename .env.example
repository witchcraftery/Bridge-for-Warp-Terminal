# Bridge for Warp Terminal - Environment Configuration Example
# Copy this file to .env and replace placeholder values with your actual configuration

# ==========================================
# Server Configuration
# ==========================================

# Host to bind the server to
# Use 0.0.0.0 to allow external connections (be careful!)
# Use 127.0.0.1 for local-only access (recommended for development)
BRIDGE_HOST=127.0.0.1

# Port for the WebSocket server
# Default: 7777
BRIDGE_PORT=7777

# ==========================================
# Shell Configuration
# ==========================================

# Path to the shell executable
# Examples: /bin/zsh, /bin/bash, /bin/fish, /usr/local/bin/fish
# Leave unset to use system default
BRIDGE_SHELL=/bin/zsh

# Shell initialization file (optional)
# Path to custom shell rc file for Bridge sessions
# BRIDGE_SHELL_RC=/path/to/custom/.zshrc

# ==========================================
# Security Configuration (Production)
# ==========================================

# Authentication token for WebSocket connections
# Generate a secure random token: openssl rand -hex 32
# BRIDGE_AUTH_TOKEN=your-secure-random-token-here-replace-me

# Allowed origins for CORS (comma-separated)
# Example: https://app.yourdomain.com,https://yourdomain.com
# BRIDGE_ALLOWED_ORIGINS=https://your-domain.com

# Session timeout in seconds (0 = no timeout)
# BRIDGE_SESSION_TIMEOUT=3600

# Maximum concurrent connections per IP
# BRIDGE_MAX_CONNECTIONS=5

# Enable command filtering (true/false)
# When true, dangerous commands are blocked
# BRIDGE_FILTER_COMMANDS=false

# Command whitelist (comma-separated, only if filtering is enabled)
# BRIDGE_ALLOWED_COMMANDS=ls,pwd,echo,cat,grep,find

# ==========================================
# TLS/SSL Configuration (Production)
# ==========================================

# Enable TLS (true/false)
# BRIDGE_TLS_ENABLED=false

# Path to TLS certificate file
# BRIDGE_TLS_CERT=/path/to/cert.pem

# Path to TLS private key file
# BRIDGE_TLS_KEY=/path/to/key.pem

# ==========================================
# Logging Configuration
# ==========================================

# Rust log level: error, warn, info, debug, trace
# Examples:
#   - info: General information
#   - debug: Detailed debugging information
#   - trace: Very verbose logging
RUST_LOG=info

# Log output format: json, pretty, compact
# BRIDGE_LOG_FORMAT=pretty

# Log file path (optional, logs to stdout if not set)
# BRIDGE_LOG_FILE=/var/log/bridge/bridge.log

# ==========================================
# Performance Configuration
# ==========================================

# Worker threads for the Tokio runtime
# Default: Number of CPU cores
# BRIDGE_WORKER_THREADS=4

# Maximum frame size for WebSocket messages (bytes)
# Default: 10485760 (10MB)
# BRIDGE_MAX_FRAME_SIZE=10485760

# PTY buffer size (bytes)
# Default: 4096
# BRIDGE_PTY_BUFFER_SIZE=4096

# ==========================================
# Feature Flags
# ==========================================

# Enable metrics endpoint (true/false)
# BRIDGE_METRICS_ENABLED=false

# Metrics endpoint port
# BRIDGE_METRICS_PORT=9090

# Enable health check endpoint (true/false)
# BRIDGE_HEALTH_CHECK_ENABLED=true

# ==========================================
# Development Configuration
# ==========================================

# Enable development mode (disables some security features)
# WARNING: Never use in production!
# BRIDGE_DEV_MODE=false

# Static file directory (for serving the web interface)
# Default: ./static
# BRIDGE_STATIC_DIR=./static

# Enable hot reload for static files (development only)
# BRIDGE_HOT_RELOAD=false

# ==========================================
# Advanced Configuration
# ==========================================

# Unix socket permissions (octal)
# Default: 0600 (owner read/write only)
# BRIDGE_SOCKET_PERMISSIONS=0600

# PTY initial size
# Format: COLUMNS,ROWS
# BRIDGE_PTY_SIZE=120,40

# Command execution timeout (seconds, 0 = no timeout)
# BRIDGE_COMMAND_TIMEOUT=0

# Enable shell hook integration (true/false)
# BRIDGE_ENABLE_HOOKS=true

# Custom hook script path
# BRIDGE_HOOK_SCRIPT=/path/to/hook_script.sh

# ==========================================
# Monitoring & Alerting (Optional)
# ==========================================

# Sentry DSN for error tracking
# SENTRY_DSN=https://your-key@sentry.io/project-id

# Webhook URL for alerts
# BRIDGE_ALERT_WEBHOOK=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# ==========================================
# Notes
# ==========================================
# 1. Never commit the actual .env file to version control
# 2. Use strong, unique tokens for authentication
# 3. Always use HTTPS/WSS in production
# 4. Regularly rotate authentication tokens
# 5. Monitor logs for suspicious activity
# 6. Keep the software updated for security patches